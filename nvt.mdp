define		= -DPOSRES	; position restrain the protein
; Run parameters
integrator	= md		; leap-frog integrator(The type of algorithm we want to use to solve the equations of motion)
nsteps		= 50000		; 2 * 50000 = 100 ps
dt		    = 0.002		; 2 fs (The overall simulation time (t)is given by the time step multiplied by the number of steps: t = dt * nsteps = 0.002 * 50000=100000fs = 100ps = 0.1ns)
; Output control
nstxout		= 500		; save coordinates every 1.0 ps (we can use the nstxout-compressed parameter instead of the nstxout if we want the trajectory in a less-consuming format (xtc))
nstvout		= 500		; save velocities every 1.0 ps (The nstxout=500 and nstvout=500 parameters mean that we are writing the coordinates and the velocities to the trajectory file in the trr format every 500 time steps.)
nstenergy	= 500		; save energies every 1.0 ps (this parameter is needed to communicate to GROMACS how often we want to save the energies in the edr output file)
nstlog		= 500		; update log file every 1.0 ps (how frequently to save information to the log file, which provides a summary of the run)
; Bond parameters
continuation	        = no		; first dynamics run(We are not continuing this simulation starting from another run)
constraint_algorithm    = lincs	    ; holonomic constraints (We want to constraint the bonds of the protein using the LINCS algorithm.)
constraints	            = all-bonds	; all bonds (even heavy atom-H bonds) constrained
lincs_iter	            = 1		    ; accuracy of LINCS
lincs_order	            = 4		    ; also related to accuracy
; Neighborsearching
cutoff-scheme   = Verlet
ns_type		    = grid		; search neighboring grid cells
nstlist		    = 10		; 20 fs, largely irrelevant with Verlet
rcoulomb	    = 1.0		; short-range electrostatic cutoff (in nm)
rvdw		    = 1.0		; short-range van der Waals cutoff (in nm)
; Electrostatics
coulombtype	    = PME	; Particle Mesh Ewald for long-range electrostatics
pme_order	    = 4		; cubic interpolation
fourierspacing	= 0.16	; grid spacing for FFT
; Temperature coupling is on
tcoupl		= V-rescale	            ; modified Berendsen thermostat(To bring the system to the desired temperature we need an algorithm to simulate a thermostat. GROMACS provides you with different algorithms. You can decide the algorithm to use by setting the tcoupl parameter. The V-rescale thermostat is appropriate for a general equilibration)
tc-grps		= Protein Non-Protein	; two coupling groups - more accurate(It is generally recommendable to create at least two groups, consisting of the protein (Protein) and the rest of the system (Non-protein))
tau_t		= 0.1	  0.1           ; time constant, in ps
ref_t		= 300 	  300           ; reference temperature, one for each group, in K(desired temperature for both groups)
; Pressure coupling is off
pcoupl		= no 		; no pressure coupling in NVT(In an NVT simulation, we donâ€™t adjust the pressure of the system so the box of the system stays fixed (pcoupl=no))
; Periodic boundary conditions
pbc		= xyz		    ; 3-D PBC
; Dispersion correction
DispCorr	= EnerPres	; account for cut-off vdW scheme
; Velocity generation
gen_vel		= yes		; assign velocities from Maxwell distribution
gen_temp	= 300		; temperature for Maxwell distribution
gen_seed	= -1		; generate a random seed
